{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "gaussOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "gaussGANGAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lockAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					}
				],
				"name": "VestingCreated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "beneficiaryVestingAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "gaussVestings",
				"outputs": [
					{
						"internalType": "address",
						"name": "beneficiaryWallet",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "amountsList",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "lockTimes",
						"type": "uint256[]"
					}
				],
				"name": "scheduledVesting",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "vestTokens",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vestingContractAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"GaussGang/contracts/token/GaussVault.sol": "GaussVault"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"GaussGang/contracts/dependencies/access/Ownable.sol": {
			"keccak256": "0x9585aad588ee7688329bd7a4b95a1a15a388dacd6f22f0a69bf30259d05e4fd6",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5b844126703448befffecce36e79e04df5ccadb7a704425ca912556f29b9ce1",
				"dweb:/ipfs/QmePPPuQbqKNJAHyDPJoG4dHDMHTZ1WKHfkqzsdkTG7p42"
			]
		},
		"GaussGang/contracts/dependencies/contracts/ScheduledTokenLock.sol": {
			"keccak256": "0xba4f47869b59215512957a839f01fb47a4e4b5f3629fc2a6a5f7cc5205d044c4",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://e090d58037ba887055983da087b25f5288408693e0324fd6a75bcfce5e4a5490",
				"dweb:/ipfs/QmdW3q6PKmSqSfeXohrFrDdFSPstQFNMVC4SNanvzy25Cf"
			]
		},
		"GaussGang/contracts/dependencies/contracts/TokenLock.sol": {
			"keccak256": "0x5d7d20a429bfbdf953c65c6a134526fd4dad94a64ede5df4db3cdf9e1541b542",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://0df58b2c5da93c05974d5c5c1544e81e2be2bf55e2c24484b39a3c4ca4d444a2",
				"dweb:/ipfs/QmTaBBQDBuW7md9dKkbXSznombev7Jhi8uNd1ewoZEXh1t"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/IBEP20.sol": {
			"keccak256": "0x68f22bcae10af0130ffac3efdb9603e52e774ba1389b8bd6bbb1ef41b4c804c9",
			"license": "MIT",
			"urls": [
				"bzz-raw://c6839c26548ded5776b34c4c1f50f6775d30d2949dc6156c87d43787335340f5",
				"dweb:/ipfs/QmbyKAkr2DhxzUnNzj7mX1HDFwqGRay5y2TpzijmY75wxj"
			]
		},
		"GaussGang/contracts/dependencies/libraries/Address.sol": {
			"keccak256": "0x991499c25ee6e38e2c07981a1abab1875d067034c3210e9e3a55324ba00f7d9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://c2b808bf2fea890bc6b8f4d93c4dddd90a3a3e6be6e778ec4484a657708a5b86",
				"dweb:/ipfs/Qmf3gj7f3ztbsUBRrfm5g4wp44LMvKucLyAutNwpRH59iZ"
			]
		},
		"GaussGang/contracts/dependencies/utilities/Context.sol": {
			"keccak256": "0x2286f6675b3713aa9f34fcf747e7a49b9b7a76a209b894d7393c0777eda27fab",
			"license": "MIT",
			"urls": [
				"bzz-raw://0fa6fdbc5420fe8e590e09c61e161734c48996df6455484cec5316dff926bffe",
				"dweb:/ipfs/Qme4q9QbJ7HmuJon5HrcrjZMc3TVSvKspE61RPrhB3pABX"
			]
		},
		"GaussGang/contracts/token/GaussVault.sol": {
			"keccak256": "0xdf3cc38114d0e02968f3ac77c11c49c0b3759536ee41db530957acd3f2a9e601",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://f5cf7f30097ab27f38eed27dbb325f2831f685bdb9627b7784aa400ea9f6befd",
				"dweb:/ipfs/QmeTHK1GtJRnPpJq7n5mgMRGCupKGGvmBsiLez8zbCJ2ix"
			]
		}
	},
	"version": 1
}