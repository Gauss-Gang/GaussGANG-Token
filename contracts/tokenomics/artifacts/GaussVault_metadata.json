{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "gaussOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "gaussGANGAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lockAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					}
				],
				"name": "VestingCreated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "beneficiaryVestingAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "gaussVestings",
				"outputs": [
					{
						"internalType": "address",
						"name": "beneficiaryWallet",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "amountsList",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "lockTimes",
						"type": "uint256[]"
					}
				],
				"name": "scheduledVesting",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "vestTokens",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vestingContractAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"GaussGang/contracts/tokenomics/GaussVault.sol": "GaussVault"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"GaussGang/contracts/dependencies/contracts/Context.sol": {
			"keccak256": "0x2286f6675b3713aa9f34fcf747e7a49b9b7a76a209b894d7393c0777eda27fab",
			"license": "MIT",
			"urls": [
				"bzz-raw://0fa6fdbc5420fe8e590e09c61e161734c48996df6455484cec5316dff926bffe",
				"dweb:/ipfs/Qme4q9QbJ7HmuJon5HrcrjZMc3TVSvKspE61RPrhB3pABX"
			]
		},
		"GaussGang/contracts/dependencies/contracts/Ownable.sol": {
			"keccak256": "0xa80ecf9c81ff593dd3f639756c515b10413804f1db38ac0af9bda6e7685712f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://4f568a5db9f54dfcb839409316b5605cbd6f5fb68e5cfdb42aa08de2d52dbdaf",
				"dweb:/ipfs/QmNknJiUqMaDaGccqi4qpi5Mgvy8TexKsQuG2yUVqgZEQ3"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/IBEP20.sol": {
			"keccak256": "0x68f22bcae10af0130ffac3efdb9603e52e774ba1389b8bd6bbb1ef41b4c804c9",
			"license": "MIT",
			"urls": [
				"bzz-raw://c6839c26548ded5776b34c4c1f50f6775d30d2949dc6156c87d43787335340f5",
				"dweb:/ipfs/QmbyKAkr2DhxzUnNzj7mX1HDFwqGRay5y2TpzijmY75wxj"
			]
		},
		"GaussGang/contracts/dependencies/libraries/Address.sol": {
			"keccak256": "0xfa9aaf09eceec182a7f76c1ad5a33a128fb3c769b7ba99567f5931b803ebfd8c",
			"license": "MIT",
			"urls": [
				"bzz-raw://edd2c49af70dc723a393f336eb600ea3ad9508b60d772d6b3fbeee6d676508d9",
				"dweb:/ipfs/QmYDfZtbEeB2z6GyWeqjKdgBqtQBgwC3frKs98fznS9LDu"
			]
		},
		"GaussGang/contracts/tokenomics/GaussVault.sol": {
			"keccak256": "0xb98334242499300e31032ea9ba25afb4637754386b0798c91bef46dd0e456f6b",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://b660ced400787e5d542b73c007fbb0df13dbc963c726e89d7d8d3ab92280daaf",
				"dweb:/ipfs/QmVp4ThomV5iMb3ByczGibavMDgiYKEAkdoUUKUvcbprsF"
			]
		},
		"GaussGang/contracts/tokenomics/timeLock/ScheduledTokenLock.sol": {
			"keccak256": "0xd10ae5fdf9020035fccd0719d26f3bb981c77deb98fac278a143a05a2d2b9737",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://0b08590b5d59e375aeb007d1771242f07b5ced92750f3db2bf9585a3a57f9d0f",
				"dweb:/ipfs/QmTVKsDpHh9aRh8ZzqJj7uCi5Q5Jjd8wnq6HST2Ns1Vue8"
			]
		},
		"GaussGang/contracts/tokenomics/timeLock/TokenLock.sol": {
			"keccak256": "0xf8227a760f541c207df8769136e1e770858731f32f38b6ec59767864b4228a07",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://1ef7dcfb9752d524929593b09cd5ff2efa5cd2d4e71876446bcd96d2569ceaee",
				"dweb:/ipfs/Qmb1srPpsLSnvsxRxyPcsENeNG23fCTP6rz7KXZiiiokLk"
			]
		}
	},
	"version": 1
}