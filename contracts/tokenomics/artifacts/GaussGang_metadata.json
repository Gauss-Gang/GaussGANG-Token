{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_charitableFundFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_gangFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_liquidityFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_redistributionFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_totalFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "_vestWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newCharitableAddress",
						"type": "address"
					}
				],
				"name": "changeCharitableWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newGaussGangAddress",
						"type": "address"
					}
				],
				"name": "changeGaussGangWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newLiquidityAddress",
						"type": "address"
					}
				],
				"name": "changeLiquidityWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newRedistributionAddress",
						"type": "address"
					}
				],
				"name": "changeRedistributionWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newRedistributionFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newCharitableFundFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newLiquidityFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newGangFee",
						"type": "uint256"
					}
				],
				"name": "changeTransactionFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pancakeswapPair",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pancakeswapRouter",
				"outputs": [
					{
						"internalType": "contract IPancakeSwapRouter02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newRouter",
						"type": "address"
					}
				],
				"name": "setRouterAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalTransactionFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getOwner()": {
					"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction. constructor(string memory name, string memory symbol) public { _name = name; _symbol = symbol; _decimals = 18; }"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"GaussGang/contracts/tokenomics/GaussGang.sol": "GaussGang"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"GaussGang/contracts/dependencies/contracts/BEP20.sol": {
			"keccak256": "0x4701be868c5a92853b8e5817c15a828f366c673040ce66d19c11b5ca30b871d5",
			"license": "MIT",
			"urls": [
				"bzz-raw://15570fff1096a7914553a62403744f584c5c2671c861a60a1a9ff4be2949c8cf",
				"dweb:/ipfs/QmbmQ18QPUCRaiYTkAHLBD41DvLpt1NAa9hzKkghVr5m13"
			]
		},
		"GaussGang/contracts/dependencies/contracts/Context.sol": {
			"keccak256": "0x2286f6675b3713aa9f34fcf747e7a49b9b7a76a209b894d7393c0777eda27fab",
			"license": "MIT",
			"urls": [
				"bzz-raw://0fa6fdbc5420fe8e590e09c61e161734c48996df6455484cec5316dff926bffe",
				"dweb:/ipfs/Qme4q9QbJ7HmuJon5HrcrjZMc3TVSvKspE61RPrhB3pABX"
			]
		},
		"GaussGang/contracts/dependencies/contracts/Ownable.sol": {
			"keccak256": "0xaa91bf17312c2bb4e4c018167e98361df3af3c2a2f84a038bb8c2f18a93556a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://f90ee24db00002d0f3df3560b5300e7083ea79f9a72ef4d2d8ce23a263b9f313",
				"dweb:/ipfs/QmUrRoRhrF8MmNDDCJZYYAEHwqJ3zSdLdfwTxe4rZxfHNS"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/IBEP20.sol": {
			"keccak256": "0xbe27147f54c8a62c39cb5e748d732710a49a1e36407936596ed1b2985774914b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d9c8e0b4aaca38ba83911bf09cc75a7b2e806cc20b4bb985a3ce6282e1182ac8",
				"dweb:/ipfs/QmPixZNPCrdY69y5VwxEen9WBthGjJYvAqC8qHHXW8J7tJ"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/pancakeSwap/IPancakeSwapFactory.sol": {
			"keccak256": "0x36964c0a766794695daf0be1124fa1a473e2c811fcd1d3d96320ce49ba4cef65",
			"license": "MIT",
			"urls": [
				"bzz-raw://38cb1eadf7a6df226c346a58553298b58f75d0ce30e788a12b9f99782033b8d5",
				"dweb:/ipfs/QmX7YdAjEkRM91Qddf2LLYw9aTuDTK1ixmZtbUaXJDY612"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/pancakeSwap/IPancakeSwapPair.sol": {
			"keccak256": "0x7d9532239a13becdeed81b91550011314222138e9ae76be18e224ec5bd6f826e",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f6b875b1d38a2d49615455f5ff893bbd4678729b7104fb1b93a27dec5f19287",
				"dweb:/ipfs/QmQTxprgyaQs7SmrwvebZ7pTC1idASXHfj7iB3vfj3NhJD"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/pancakeSwap/IPancakeSwapRouter01.sol": {
			"keccak256": "0x6fdea9a336f1634dc16410863b7146f3cc37c8a544767bec1f9ef78e16510b94",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8066cab7e3da1f3695b6c1f680db6faecfc68b5c755fa405bb202002063bb70",
				"dweb:/ipfs/QmbkAbcqqVCKWVY1KBsuu52d7TXEtZFxUoreo2wh8Scj4A"
			]
		},
		"GaussGang/contracts/dependencies/interfaces/pancakeSwap/IPancakeSwapRouter02.sol": {
			"keccak256": "0x5164248128e604bb56809cd3cd5724a376450ddc5443cb79c1161c56a284165e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0f66735768ada1c7f1599a7dfb45ac9056cada956c8633ae25e3a6edaae4fb6",
				"dweb:/ipfs/QmXZtgiGH8YuD3HdjUaKk8tfG2CDjMC44AaVd8jD4K3ah4"
			]
		},
		"GaussGang/contracts/dependencies/libraries/Address.sol": {
			"keccak256": "0x9d20a199283ef9f90ae8178ddf61bd13ccbf2dd62b8429b3684df32ae002ac65",
			"license": "MIT",
			"urls": [
				"bzz-raw://77f1542f3891335fb1ca64aa777c7de4e5ad4bb6971357328a1222b5a17f62dc",
				"dweb:/ipfs/QmWeEVwU89UjzM65xnD2ZH92kxWRenYcZjfKMM9NDENTXH"
			]
		},
		"GaussGang/contracts/dependencies/libraries/SafeMath.sol": {
			"keccak256": "0x530b87843e152aa51b6bf98a68e01806ecb38e69e183dc7a03d478905138d433",
			"license": "MIT",
			"urls": [
				"bzz-raw://ebd73a8ff5b53f0921bf21bdac7e46310cbaadcb2bc0c53b1ba8f5dc3df0a7c6",
				"dweb:/ipfs/Qmf26AqboPHUj49qKJpke5e34wZgMqBT3p1MxjRqKJAiNK"
			]
		},
		"GaussGang/contracts/tokenomics/GaussGang.sol": {
			"keccak256": "0xa03dfe0391003e31092d2412d0269c96ea46092d2167dbc77fc67c5f0be86373",
			"license": "MIT",
			"urls": [
				"bzz-raw://091ba6a23aaa49beae9174f24fc504a5a76d0275a1cf744acd746bdd6e520157",
				"dweb:/ipfs/QmdoL5gFDzZnZMR6RpoNyG7Kfx9t1C9x5FgWETkE8m2Qnf"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/AdvisorTokenLock.sol": {
			"keccak256": "0xecf70dd1bef2a63232d00dc5fd4d05e92dfb1509111c05d9c7c2699cfe1f43b4",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://de2850bb7d220849dce047d100db8215c53a370bdc823ce7408088c97ae0184b",
				"dweb:/ipfs/QmX4fakeeb5BH9z9emXo4QyQA1XzfufruaogCXzaXYVPgc"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/CharitableFundTokenLock.sol": {
			"keccak256": "0xd8de388a55ffdd47df74845aaf7a029da656670eae4384e7c4dda71c6c89d56f",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://5f666fde5d062e4b5e6aa2103280f570fcca67be7b28539aa7bede98566f6bc9",
				"dweb:/ipfs/QmNNJw2WDNTHv7at1DV3ATkuS3bbWtXZHore6bqDmu8CLG"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/CommunityTokenLock.sol": {
			"keccak256": "0x9ab1206f97f8d873cabca7ed75b2e983deeac49c301ac2d42211aafaeb2dcdc2",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://cb8444256d62ef428d8ba7d98f750f48114c4718e102f2a2f0ea9c4742d6a685",
				"dweb:/ipfs/QmbidKJLrgdJZgC8rfKxRh2WP4GvDBasyYrJFAaztq7pZw"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/CoreTeamTokenLock.sol": {
			"keccak256": "0x0b3aedbb973bd7dc94c37c0ae74d61d1e6ee9032bdee4ed092ec8314257a1552",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://a2ee18beafe9d90f4c19b00166a44f880516e89cddf0a5037480e61e672f8d3c",
				"dweb:/ipfs/QmSXTtZQoR9xw4FMq4spTCBmvSuWdQim5i2q2au2qLjnyT"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/LiquidityTokenLock.sol": {
			"keccak256": "0xefb1b6f45f90b3cb49dcfb355fc7190ef1ec928c45960d71e6fdc2d60c86ca29",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://5e26fa0c32a081c835dccb8428e66d88f954bbadf5c61b1870befea1510334ed",
				"dweb:/ipfs/QmcD1SNcx3Qy8dstWMApV1g7ct34Sv91Ya9cdorLMjT7X2"
			]
		},
		"GaussGang/contracts/tokenomics/TimeLock/TokenLock.sol": {
			"keccak256": "0xe69358693f59ece010ea3844d946b1c3b907b96f7f846091a73378e9c35dd10a",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://c7280479c93ee810696324dbf72094257af824e722782b8e40ccf2c864641e94",
				"dweb:/ipfs/QmayQ6P681aHa83s54hSeDhx6P5yKBCVtUKMJxAKDV7FEj"
			]
		}
	},
	"version": 1
}